#!/bin/bash

set -o errexit
set -o pipefail
set -o nounset

BASE_DIR=$( realpath $( dirname "${BASH_SOURCE[0]}" )/../ )
source "$BASE_DIR/.bin/lib/common.sh"
setRoot

IN_DEVCONTAINER=$([[ -f /.dockerenv && -d /workspaces/ark-operator ]] && echo "true" || echo "false")
DEV_ONLY=false

if [[ $IN_DEVCONTAINER == "true" ]]; then
    echo "Inside of devcontainer"
fi

pushd "$ROOT_PATH" 2>&1 >/dev/null

if [[ $IN_DEVCONTAINER == "true" ]]; then
    sudo rm -rf /workspaces/databricks-oidc/databricks_oidc.egg-info
fi

DEV_ARGS=""
SYNC_ARGS="dev-requirements.txt"
if [[ "$DEV_ONLY" != "true" ]]; then
    echo "Updating requirements.txt..."
    uv pip compile -v --upgrade --output-file=requirements.txt pyproject.toml
    DEV_ARGS=" -c requirements.txt"
    SYNC_ARGS="requirements.txt dev-requirements.txt"
fi
echo "Updating dev-requirements.txt..."
uv pip compile -v$DEV_ARGS --upgrade --extra=dev --output-file=dev-requirements.txt pyproject.toml

if [[ $IN_DEVCONTAINER == "true" ]]; then
    echo "Upgrading dev container environment..."
    sudo -E uv pip sync --link-mode=copy $SYNC_ARGS
    sudo -E uv pip install --link-mode=copy -e '.[dev]'
fi
popd 2>&1 >/dev/null
